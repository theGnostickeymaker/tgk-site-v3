{# =========================================================
   üîç TGK ‚Äî JSON-LD Collection Generator (v2.2)
   Purpose:
   Injects structured data (schema.org) for SEO and discovery.
   Designed for TGK series, page indexes, and Vault listings.

   ‚úÖ Data Inputs:
   ‚Ä¢ headline ‚Üí Overall title of the collection
   ‚Ä¢ base     ‚Üí Canonical URL (e.g. page.url or series base)
   ‚Ä¢ items    ‚Üí Array of objects with at least `title` and/or `url`
                Accepts either { title, url } or { title, href }

   üß≠ Behaviour:
   ‚Ä¢ Only renders <script> if `items` exists and has length > 0
   ‚Ä¢ Uses CollectionPage with `hasPart` of CreativeWork entries
   ‚Ä¢ Gracefully skips null URLs and titles without breaking syntax

   ‚ú® Output Example:
   {
     "@context": "https://schema.org",
     "@type": "CollectionPage",
     "name": "The Afterlife Series",
     "url": "https://thegnostickey.com/pillars/the-teachings/the-afterlife/",
     "hasPart": [
       { "@type": "CreativeWork", "name": "Gnostic Christianity", "url": "‚Ä¶" },
       { "@type": "CreativeWork", "name": "Sufi Islam", "url": "‚Ä¶" }
     ]
   }

   ‚öôÔ∏è Notes:
   ‚Ä¢ Safe for reuse across any collection view.
   ‚Ä¢ For individual pages, use `jsonld-page.njk` instead.
   ========================================================= #}

{%- if items and items.length -%}
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "CollectionPage",
  "name": {{ headline | dump }},
  "url": {{ base | dump }},
  "hasPart": [
    {%- for it in items -%}
    {
      "@type": "CreativeWork",
      "name": {{ (it.title or "") | dump }}
      {%- set itemUrl = it.url or it.href -%}
      {%- if itemUrl %},
      "url": {{ itemUrl | dump }}
      {%- endif -%}
    }{% if not loop.last %},{% endif %}
    {%- endfor -%}
  ]
}
</script>
{%- endif -%}
